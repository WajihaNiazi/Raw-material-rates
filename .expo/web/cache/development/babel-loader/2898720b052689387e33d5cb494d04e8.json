{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Raw-material-rates\\\\screens\\\\reportScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ReadMore from 'react-native-read-more-text';\nexport var DescriptionCard = function (_React$Component) {\n  _inherits(DescriptionCard, _React$Component);\n\n  var _super = _createSuper(DescriptionCard);\n\n  function DescriptionCard() {\n    var _this;\n\n    _classCallCheck(this, DescriptionCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._renderTruncatedFooter = function (handlePress) {\n      return React.createElement(Text, {\n        style: {\n          color: Colors.tintColor,\n          marginTop: 5\n        },\n        onPress: handlePress,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, \"Read more\");\n    };\n\n    _this._renderRevealedFooter = function (handlePress) {\n      return React.createElement(Text, {\n        style: {\n          color: Colors.tintColor,\n          marginTop: 5\n        },\n        onPress: handlePress,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }\n      }, \"Show less\");\n    };\n\n    _this._handleTextReady = function () {};\n\n    return _this;\n  }\n\n  _createClass(DescriptionCard, [{\n    key: \"render\",\n    value: function render() {\n      var text = this.props.text;\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.cardLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.cardLabelText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, \"Description\")), React.createElement(View, {\n        style: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.cardBody,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, React.createElement(ReadMore, {\n        numberOfLines: 3,\n        renderTruncatedFooter: this._renderTruncatedFooter,\n        renderRevealedFooter: this._renderRevealedFooter,\n        onReady: this._handleTextReady,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.cardText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, text)))));\n    }\n  }]);\n\n  return DescriptionCard;\n}(React.Component);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/Raw-material-rates/screens/reportScreen.js"],"names":["React","ReadMore","DescriptionCard","_renderTruncatedFooter","handlePress","color","Colors","tintColor","marginTop","_renderRevealedFooter","_handleTextReady","text","props","styles","cardLabel","cardLabelText","card","cardBody","cardText","Component"],"mappings":";;;;;;;;;;;;AAqCA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,QAAP,MAAqB,6BAArB;AAEA,WAAaC,eAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UA6BEC,sBA7BF,GA6B2B,UAACC,WAAD,EAAiB;AACxC,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAEC,MAAM,CAACC,SAAf;AAA0BC,UAAAA,SAAS,EAAE;AAArC,SAAb;AAAsD,QAAA,OAAO,EAAEJ,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF;AAKD,KAnCH;;AAAA,UAqCEK,qBArCF,GAqC0B,UAACL,WAAD,EAAiB;AACvC,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAEC,MAAM,CAACC,SAAf;AAA0BC,UAAAA,SAAS,EAAE;AAArC,SAAb;AAAsD,QAAA,OAAO,EAAEJ,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF;AAKD,KA3CH;;AAAA,UA6CEM,gBA7CF,GA6CqB,YAAM,CAExB,CA/CH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AAAA,UACDC,IADC,GACQ,KAAKC,KADb,CACDD,IADC;AAGP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,EAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,aAAa,EAAE,CADjB;AAEE,QAAA,qBAAqB,EAAE,KAAKd,sBAF9B;AAGE,QAAA,oBAAoB,EAAE,KAAKM,qBAH7B;AAIE,QAAA,OAAO,EAAE,KAAKC,gBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACK,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,IADH,CALF,CADF,CADF,CAPF,CADF;AAuBD;AA3BH;;AAAA;AAAA,EAAqCX,KAAK,CAACmB,SAA3C","sourcesContent":["// import React,{useState,useEffect} from 'react';\r\n// import {\r\n//     View,\r\n//     Text,\r\n//     FlatList,\r\n//     TouchableOpacity,\r\n//     StyleSheet\r\n// } from 'react-native';\r\n// import Colors from '../utils/colors';\r\n// import * as SQLite from \"expo-sqlite\";\r\n// import { Feather } from \"@expo/vector-icons\";\r\n// import ReportItem from \"../components/reportItem\";\r\n// // const db = SQLite.openDatabase('productRate.db')\r\n// const reports = [\r\n//     {id:'1',location:\"Darb-khosh\",Name:\"Wajiha\",shopNumber:\"9\",message:\"something....something....something....something....something....something....something....something....something....something....something....\"},\r\n//     {id:'2',location:\"Darb-khosh\",Name:\"Wajiha\",shopNumber:\"09\",message:\"something....something....something....something....something....something....something....something....something....something....something....something....\"},\r\n//     {id:'3',location:\"Darb-khosh\",Name:\"Wajiha\",shopNumber:\"9\",message:\"something....something....something....something....something....something....something....something....something....something....something....something....\"},\r\n//     {id:'3',location:\"Darb-khosh\",Name:\"Wajiha\",shopNumber:\"9\",message:\"something....something....something....something....something....something....something....something....something....something....something....something....\"}\r\n// ]\r\n// export default function ReportScreen({navigation}){\r\n//     return (\r\n//       <FlatList \r\n//         data={reports} \r\n//         keyExtractor={(item)=>item.id}\r\n//         renderItem={({item})=>{\r\n//           return <ReportItem\r\n//               location={item.location}\r\n//               message={item.message}\r\n//               shopNumber={item.shopNumber}\r\n//               name={item.Name}\r\n//           />\r\n//         }}\r\n//       />\r\n//     )\r\n// }\r\n\r\n\r\nimport * as React from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport ReadMore from 'react-native-read-more-text';\r\n \r\nexport class DescriptionCard extends React.Component {\r\n  render() {\r\n    let { text } = this.props;\r\n \r\n    return (\r\n      <View>\r\n        <View style={styles.cardLabel}>\r\n          <Text style={styles.cardLabelText}>\r\n            Description\r\n          </Text>\r\n        </View>\r\n \r\n        <View style={styles.card}>\r\n          <View style={styles.cardBody}>\r\n            <ReadMore\r\n              numberOfLines={3}\r\n              renderTruncatedFooter={this._renderTruncatedFooter}\r\n              renderRevealedFooter={this._renderRevealedFooter}\r\n              onReady={this._handleTextReady}>\r\n              <Text style={styles.cardText}>\r\n                {text}\r\n              </Text>\r\n            </ReadMore>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n \r\n  _renderTruncatedFooter = (handlePress) => {\r\n    return (\r\n      <Text style={{color: Colors.tintColor, marginTop: 5}} onPress={handlePress}>\r\n        Read more\r\n      </Text>\r\n    );\r\n  }\r\n \r\n  _renderRevealedFooter = (handlePress) => {\r\n    return (\r\n      <Text style={{color: Colors.tintColor, marginTop: 5}} onPress={handlePress}>\r\n        Show less\r\n      </Text>\r\n    );\r\n  }\r\n \r\n  _handleTextReady = () => {\r\n    // ...\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}