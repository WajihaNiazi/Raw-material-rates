{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\contactList\\\\screens\\\\Contacts.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Colors from \"../utils/colors\";\nimport ContactListItem from \"../components/contactListItem\";\nimport * as SQLite from \"expo-sqlite\";\nimport { Feather } from \"@expo/vector-icons\";\nvar db = SQLite.openDatabase('contacts.db');\nexport default function Contacts(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      contacts = _useState2[0],\n      setContacts = _useState2[1];\n\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql('select * from contact', [], function (tx, _ref2) {\n        var rows = _ref2.rows;\n        var data = [];\n\n        for (var i = 0; i < rows.length; i++) {\n          data.push(rows[i]);\n        }\n\n        setContacts(data);\n      });\n    });\n  });\n\n  var deleteContact = function deleteContact(id) {\n    db.transaction(function (tx) {\n      tx.executeSql('delete from contact where id ');\n    });\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, contacts.length > 0 ? React.createElement(FlatList, {\n    data: contacts,\n    keyExtractor: function keyExtractor(item) {\n      item.id;\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(ContactListItem, {\n        name: item.name,\n        phone: item.phone,\n        onPress: function onPress() {\n          return navigation.navigate('Profile', {\n            item: item\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 22\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 32\n    }\n  }) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"No contact to display \")), React.createElement(TouchableOpacity, {\n    style: styles.floatButton,\n    onPress: function onPress() {\n      return navigation.navigate('CreateContact');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, React.createElement(Feather, {\n    name: \"plus\",\n    size: 28,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  floatButton: {\n    backgroundColor: 'orange',\n    padding: 20,\n    borderRadius: '50%',\n    position: 'absolute',\n    bottom: 40,\n    right: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/lenovo/contactList/screens/Contacts.js"],"names":["React","useState","useEffect","Colors","ContactListItem","SQLite","Feather","db","openDatabase","Contacts","navigation","contacts","setContacts","transaction","tx","executeSql","rows","data","i","length","push","deleteContact","id","item","name","phone","navigate","styles","floatButton","StyleSheet","create","backgroundColor","padding","borderRadius","position","bottom","right"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    FlatList,\r\n    TouchableOpacity,\r\n    StyleSheet\r\n} from 'react-native';\r\nimport Colors from '../utils/colors';\r\nimport ContactListItem from '../components/contactListItem'\r\nimport * as SQLite from \"expo-sqlite\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nconst db = SQLite.openDatabase('contacts.db');\r\n\r\nexport default function Contacts({navigation}){\r\n  const [contacts,setContacts] = useState([]);\r\n  useEffect(()=>{\r\n    db.transaction((tx)=>{\r\n      tx.executeSql('select * from contact',[],(tx,{rows})=>{\r\n        var data =[];\r\n        for (let i = 0; i < rows.length; i++) {\r\n          data.push(rows[i]);\r\n        }\r\n        setContacts(data);\r\n      })\r\n    })\r\n  })\r\n  const deleteContact = (id)=>{\r\n    db.transaction(tx=>{\r\n      tx.executeSql('delete from contact where id ')\r\n    })\r\n  }\r\n    return (\r\n      <View>\r\n        {contacts.length > 0 ? <FlatList \r\n          data={contacts}\r\n          keyExtractor={(item)=>{item.id}}\r\n          renderItem={({item}) =>{\r\n              return <ContactListItem name={item.name} phone={item.phone }  onPress={()=> navigation.navigate('Profile',{item:item})}/>\r\n          }}\r\n        /> : <View>\r\n            <Text>No contact to display </Text>\r\n          </View>}\r\n        <TouchableOpacity style={styles.floatButton} onPress={()=> navigation.navigate('CreateContact')}>\r\n          <Text>\r\n            <Feather name=\"plus\" size={28} color=\"white\" />\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      \r\n\r\n    )\r\n\r\n}\r\nconst styles =StyleSheet.create({\r\n    \r\n    floatButton:{\r\n      backgroundColor:'orange',\r\n      padding:20,\r\n      borderRadius:'50%',\r\n      position:'absolute',\r\n      bottom:40,\r\n      right:40\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}