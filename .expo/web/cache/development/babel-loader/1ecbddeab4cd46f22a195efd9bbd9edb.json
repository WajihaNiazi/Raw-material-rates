{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Raw-material-rates\\\\node_modules\\\\react-native-side-nav\\\\BurgerIcon.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from \"prop-types\";\n\nvar BurgerIcon = function (_React$Component) {\n  _inherits(BurgerIcon, _React$Component);\n\n  var _super = _createSuper(BurgerIcon);\n\n  function BurgerIcon(props) {\n    var _this;\n\n    _classCallCheck(this, BurgerIcon);\n\n    _this = _super.call(this, props);\n\n    _this.openDrawerBurger = function () {\n      var _this$state = _this.state,\n          opacity = _this$state.opacity,\n          translateYtop = _this$state.translateYtop,\n          rotateTop = _this$state.rotateTop,\n          translateYbottom = _this$state.translateYbottom,\n          rotateBottom = _this$state.rotateBottom,\n          expanded = _this$state.expanded;\n      Animated.parallel([Animated.timing(opacity, {\n        toValue: 0,\n        duration: 300\n      }), Animated.timing(translateYtop, {\n        toValue: 45,\n        duration: 300\n      }), Animated.timing(rotateTop, {\n        toValue: 45,\n        duration: 300\n      }), Animated.timing(translateYbottom, {\n        toValue: 45,\n        duration: 300\n      }), Animated.timing(rotateBottom, {\n        toValue: -45,\n        duration: 300\n      }), Animated.timing(expanded, {\n        toValue: 11,\n        duration: 300\n      })]).start();\n    };\n\n    _this.closeDrawerBurger = function () {\n      var _this$state2 = _this.state,\n          opacity = _this$state2.opacity,\n          translateYtop = _this$state2.translateYtop,\n          rotateTop = _this$state2.rotateTop,\n          translateYbottom = _this$state2.translateYbottom,\n          rotateBottom = _this$state2.rotateBottom,\n          expanded = _this$state2.expanded;\n      Animated.parallel([Animated.timing(opacity, {\n        toValue: 1,\n        duration: 300\n      }), Animated.timing(translateYtop, {\n        toValue: 20,\n        duration: 300\n      }), Animated.timing(rotateTop, {\n        toValue: 0,\n        duration: 300\n      }), Animated.timing(translateYbottom, {\n        toValue: 70,\n        duration: 300\n      }), Animated.timing(rotateBottom, {\n        toValue: 0,\n        duration: 300\n      }), Animated.timing(expanded, {\n        toValue: 0,\n        duration: 300\n      })]).start();\n    };\n\n    _this.toggleMenu = function () {\n      _this.state.expanded ? _this.openDrawerBurger() : _this.closeDrawerBurger();\n    };\n\n    _this.state = {\n      expanded: new Animated.Value(0),\n      opacity: new Animated.Value(1),\n      translateYtop: new Animated.Value(20),\n      rotateTop: new Animated.Value(0),\n      translateYbottom: new Animated.Value(70),\n      rotateBottom: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(BurgerIcon, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var menuExpanded = this.props.menuExpanded;\n      menuExpanded ? this.openDrawerBurger() : this.closeDrawerBurger();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          burgerIconColor1 = _this$props.burgerIconColor1,\n          burgerIconColor2 = _this$props.burgerIconColor2,\n          burgerWidth = _this$props.burgerWidth,\n          menuExpanded = _this$props.menuExpanded,\n          onPress = _this$props.onPress,\n          burgerIconStyles = _this$props.burgerIconStyles;\n      var _this$state3 = this.state,\n          opacity = _this$state3.opacity,\n          translateYtop = _this$state3.translateYtop,\n          rotateTop = _this$state3.rotateTop,\n          translateYbottom = _this$state3.translateYbottom,\n          rotateBottom = _this$state3.rotateBottom;\n\n      var backgroundColor = function backgroundColor() {\n        if (!menuExpanded) {\n          return burgerIconColor1;\n        } else if (menuExpanded && !burgerIconColor2) {\n          return burgerIconColor1;\n        } else if (menuExpanded && burgerIconColor2) {\n          return burgerIconColor2;\n        }\n      };\n\n      return React.createElement(TouchableWithoutFeedback, {\n        title: \"Press me\",\n        onPress: onPress,\n        style: styles.buttonContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: _objectSpread(_objectSpread({}, styles.iconContainer), burgerIconStyles),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: _objectSpread(_objectSpread({}, styles.burgerIcon), {}, {\n          width: burgerWidth,\n          height: burgerWidth\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: _objectSpread(_objectSpread(_objectSpread({}, styles.burgerLine), styles.burgerLineTop), {}, {\n          backgroundColor: backgroundColor(),\n          transform: [{\n            rotate: rotateTop.interpolate({\n              inputRange: [0, 360],\n              outputRange: [\"0deg\", \"360deg\"]\n            })\n          }],\n          top: translateYtop.interpolate({\n            inputRange: [0, 100],\n            outputRange: [\"0%\", \"100%\"]\n          })\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }\n      }), React.createElement(Animated.View, {\n        style: _objectSpread(_objectSpread(_objectSpread({}, styles.burgerLine), styles.burgerLineMiddle), {}, {\n          backgroundColor: backgroundColor(),\n          opacity: opacity\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }), React.createElement(Animated.View, {\n        style: _objectSpread(_objectSpread(_objectSpread({}, styles.burgerLine), styles.burgerLineBottom), {}, {\n          backgroundColor: backgroundColor(),\n          transform: [{\n            rotate: rotateBottom.interpolate({\n              inputRange: [-360, -0],\n              outputRange: [\"-360deg\", \"-0deg\"]\n            })\n          }],\n          top: translateYbottom.interpolate({\n            inputRange: [0, 100],\n            outputRange: [\"0%\", \"100%\"]\n          })\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return BurgerIcon;\n}(React.Component);\n\nBurgerIcon.defaultProps = {\n  menuExpanded: false,\n  animationDuration: false\n};\nBurgerIcon.propTypes = {\n  menuExpanded: PropTypes.bool,\n  animationDuration: PropTypes.number\n};\nvar styles = StyleSheet.create({\n  buttonContainer: {},\n  iconContainer: {\n    position: \"absolute\",\n    zIndex: 200,\n    padding: 5\n  },\n  burgerIcon: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\"\n  },\n  burgerLine: {\n    width: \"100%\",\n    height: \"10%\",\n    borderRadius: 1,\n    position: \"absolute\"\n  },\n  burgerLineMiddle: {\n    top: \"45%\"\n  }\n});\nexport default BurgerIcon;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/Raw-material-rates/node_modules/react-native-side-nav/BurgerIcon.js"],"names":["React","PropTypes","BurgerIcon","props","openDrawerBurger","state","opacity","translateYtop","rotateTop","translateYbottom","rotateBottom","expanded","Animated","parallel","timing","toValue","duration","start","closeDrawerBurger","toggleMenu","Value","menuExpanded","burgerIconColor1","burgerIconColor2","burgerWidth","onPress","burgerIconStyles","backgroundColor","styles","buttonContainer","iconContainer","burgerIcon","width","height","burgerLine","burgerLineTop","transform","rotate","interpolate","inputRange","outputRange","top","burgerLineMiddle","burgerLineBottom","Component","defaultProps","animationDuration","propTypes","bool","number","StyleSheet","create","position","zIndex","padding","borderRadius"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Animated,\n  TouchableWithoutFeedback,\n  Dimensions,\n  StyleSheet,\n  View\n} from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nclass BurgerIcon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: new Animated.Value(0),\n      opacity: new Animated.Value(1),\n      translateYtop: new Animated.Value(20),\n      rotateTop: new Animated.Value(0),\n      translateYbottom: new Animated.Value(70),\n      rotateBottom: new Animated.Value(0)\n    };\n  }\n\n  openDrawerBurger = () => {\n    const {\n      opacity,\n      translateYtop,\n      rotateTop,\n      translateYbottom,\n      rotateBottom,\n      expanded\n    } = this.state;\n\n    Animated.parallel([\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 300\n      }),\n      Animated.timing(translateYtop, {\n        toValue: 45,\n        duration: 300\n      }),\n      Animated.timing(rotateTop, {\n        toValue: 45,\n        duration: 300\n      }),\n      Animated.timing(translateYbottom, {\n        toValue: 45,\n        duration: 300\n      }),\n      Animated.timing(rotateBottom, {\n        toValue: -45,\n        duration: 300\n      }),\n      Animated.timing(expanded, {\n        toValue: 11,\n        duration: 300\n      })\n    ]).start();\n  };\n\n  closeDrawerBurger = () => {\n    const {\n      opacity,\n      translateYtop,\n      rotateTop,\n      translateYbottom,\n      rotateBottom,\n      expanded\n    } = this.state;\n\n    Animated.parallel([\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 300\n      }),\n      Animated.timing(translateYtop, {\n        toValue: 20,\n        duration: 300\n      }),\n      Animated.timing(rotateTop, {\n        toValue: 0,\n        duration: 300\n      }),\n      Animated.timing(translateYbottom, {\n        toValue: 70,\n        duration: 300\n      }),\n      Animated.timing(rotateBottom, {\n        toValue: 0,\n        duration: 300\n      }),\n      Animated.timing(expanded, {\n        toValue: 0,\n        duration: 300\n      })\n    ]).start();\n  };\n\n  componentDidUpdate() {\n    const { menuExpanded } = this.props;\n    menuExpanded ? this.openDrawerBurger() : this.closeDrawerBurger();\n  }\n\n  toggleMenu = () => {\n    this.state.expanded ? this.openDrawerBurger() : this.closeDrawerBurger();\n  };\n\n  render() {\n    const {\n      burgerIconColor1,\n      burgerIconColor2,\n      burgerWidth,\n      menuExpanded,\n      onPress,\n      burgerIconStyles\n    } = this.props;\n    const {\n      opacity,\n      translateYtop,\n      rotateTop,\n      translateYbottom,\n      rotateBottom\n    } = this.state;\n\n    const backgroundColor = () => {\n      if (!menuExpanded) {\n        return burgerIconColor1;\n      } else if (menuExpanded && !burgerIconColor2) {\n        return burgerIconColor1;\n      } else if (menuExpanded && burgerIconColor2) {\n        return burgerIconColor2;\n      }\n    };\n\n    return (\n      <TouchableWithoutFeedback\n        title=\"Press me\"\n        onPress={onPress}\n        style={styles.buttonContainer}\n      >\n        <View style={{ ...styles.iconContainer, ...burgerIconStyles }}>\n          <View\n            style={{\n              ...styles.burgerIcon,\n              width: burgerWidth,\n              height: burgerWidth\n            }}\n          >\n            <Animated.View\n              style={{\n                ...styles.burgerLine,\n                ...styles.burgerLineTop,\n                backgroundColor: backgroundColor(),\n                transform: [\n                  {\n                    rotate: rotateTop.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: [\"0deg\", \"360deg\"]\n                    })\n                  }\n                ],\n                top: translateYtop.interpolate({\n                  inputRange: [0, 100],\n                  outputRange: [\"0%\", \"100%\"]\n                })\n              }}\n            />\n            <Animated.View\n              style={{\n                ...styles.burgerLine,\n                ...styles.burgerLineMiddle,\n                backgroundColor: backgroundColor(),\n                opacity: opacity\n              }}\n            />\n            <Animated.View\n              style={{\n                ...styles.burgerLine,\n                ...styles.burgerLineBottom,\n                backgroundColor: backgroundColor(),\n                transform: [\n                  {\n                    rotate: rotateBottom.interpolate({\n                      inputRange: [-360, -0],\n                      outputRange: [\"-360deg\", \"-0deg\"]\n                    })\n                  }\n                ],\n                top: translateYbottom.interpolate({\n                  inputRange: [0, 100],\n                  outputRange: [\"0%\", \"100%\"]\n                })\n              }}\n            />\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nBurgerIcon.defaultProps = {\n  menuExpanded: false,\n  animationDuration: false\n};\n\nBurgerIcon.propTypes = {\n  menuExpanded: PropTypes.bool,\n  animationDuration: PropTypes.number\n};\n\nconst styles = StyleSheet.create({\n  buttonContainer: {},\n  iconContainer: {\n    position: \"absolute\",\n    zIndex: 200,\n    padding: 5\n  },\n  burgerIcon: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\"\n  },\n  burgerLine: {\n    width: \"100%\",\n    height: \"10%\",\n    borderRadius: 1,\n    position: \"absolute\"\n  },\n  burgerLineMiddle: {\n    top: \"45%\"\n  }\n});\n\nexport default BurgerIcon;\n"]},"metadata":{},"sourceType":"module"}