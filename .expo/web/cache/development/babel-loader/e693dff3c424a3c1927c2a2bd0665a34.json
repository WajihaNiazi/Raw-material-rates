{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Raw-material-rates\\\\node_modules\\\\react-native-read-more-text-hooks\\\\index.tsx\";\n\nimport React, { useState, useRef, useEffect, useLayoutEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar measureHeightAsync = function measureHeightAsync(component) {\n  return _regeneratorRuntime.async(function measureHeightAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", new Promise(function (resolve) {\n            if (component.current) {\n              component.current.measure(function (x, y, width, height) {\n                resolve(height);\n              });\n            } else {\n              resolve(0);\n            }\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar nextFrameAsync = function nextFrameAsync() {\n  return _regeneratorRuntime.async(function nextFrameAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", new Promise(function (resolve) {\n            return requestAnimationFrame(function () {\n              return resolve();\n            });\n          }));\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar useIsMounted = function useIsMounted() {\n  var isMounted = useRef(false);\n  useEffect(function () {\n    isMounted.current = true;\n    return function () {\n      return isMounted.current = false;\n    };\n  }, []);\n  return isMounted;\n};\n\nvar ReadMore = function ReadMore(_ref) {\n  var numberOfLines = _ref.numberOfLines,\n      children = _ref.children,\n      renderTruncatedFooter = _ref.renderTruncatedFooter,\n      renderRevealedFooter = _ref.renderRevealedFooter,\n      onReady = _ref.onReady;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      measured = _useState2[0],\n      setMeasured = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showAllText = _useState4[0],\n      setShowAllText = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      shouldShowReadMore = _useState6[0],\n      setShouldShowReadMore = _useState6[1];\n\n  var textRef = useRef(null);\n\n  var _handlePressReadMore = function _handlePressReadMore() {\n    setShowAllText(true);\n  };\n\n  var _handlePressReadLess = function _handlePressReadLess() {\n    setShowAllText(false);\n  };\n\n  var isMounted = useIsMounted();\n  useLayoutEffect(function () {\n    var measure = function measure() {\n      var fullHeight, limitedHeight;\n      return _regeneratorRuntime.async(function measure$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(nextFrameAsync());\n\n            case 2:\n              if (isMounted.current) {\n                _context3.next = 4;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 4:\n              _context3.next = 6;\n              return _regeneratorRuntime.awrap(measureHeightAsync(textRef));\n\n            case 6:\n              fullHeight = _context3.sent;\n              setMeasured(true);\n              _context3.next = 10;\n              return _regeneratorRuntime.awrap(nextFrameAsync());\n\n            case 10:\n              if (isMounted.current) {\n                _context3.next = 12;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 12:\n              _context3.next = 14;\n              return _regeneratorRuntime.awrap(measureHeightAsync(textRef));\n\n            case 14:\n              limitedHeight = _context3.sent;\n\n              if (fullHeight > limitedHeight) {\n                setShouldShowReadMore(true);\n              } else {\n                onReady && onReady();\n              }\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    measure();\n  }, [children]);\n  useEffect(function () {\n    onReady && onReady();\n  }, [shouldShowReadMore]);\n\n  var maybeRenderReadMore = function maybeRenderReadMore() {\n    if (shouldShowReadMore && !showAllText) {\n      if (renderTruncatedFooter) {\n        return renderTruncatedFooter(_handlePressReadMore);\n      }\n\n      return React.createElement(Text, {\n        onPress: _handlePressReadMore,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 14\n        }\n      }, \"Read more\");\n    } else if (shouldShowReadMore && showAllText) {\n      if (renderRevealedFooter) {\n        return renderRevealedFooter(_handlePressReadLess);\n      }\n\n      return React.createElement(Text, {\n        onPress: _handlePressReadLess,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 14\n        }\n      }, \"Hide\");\n    }\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      opacity: 0,\n      position: \"absolute\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    numberOfLines: measured ? numberOfLines : 0,\n    ref: textRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, children)), React.createElement(Text, {\n    numberOfLines: showAllText ? 0 : numberOfLines,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, children), maybeRenderReadMore());\n};\n\nexport default ReadMore;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/Raw-material-rates/node_modules/react-native-read-more-text-hooks/index.tsx"],"names":["React","useState","useRef","useEffect","useLayoutEffect","measureHeightAsync","component","Promise","resolve","current","measure","x","y","width","height","nextFrameAsync","requestAnimationFrame","useIsMounted","isMounted","ReadMore","numberOfLines","children","renderTruncatedFooter","renderRevealedFooter","onReady","measured","setMeasured","showAllText","setShowAllText","shouldShowReadMore","setShouldShowReadMore","textRef","_handlePressReadMore","_handlePressReadLess","fullHeight","limitedHeight","maybeRenderReadMore","opacity","position"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useRef,\n  useEffect,\n  useLayoutEffect,\n  ReactNode\n} from \"react\";\nimport { Text, View } from \"react-native\";\n\nconst measureHeightAsync = async (\n  component: React.RefObject<Text>\n): Promise<number> => {\n  return new Promise(resolve => {\n    if (component.current) {\n      component.current.measure(\n        (x: number, y: number, width: number, height: number) => {\n          resolve(height);\n        }\n      );\n    } else {\n      resolve(0);\n    }\n  });\n};\n\nconst nextFrameAsync = async () => {\n  return new Promise(resolve => requestAnimationFrame(() => resolve()));\n};\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n\n    return () => (isMounted.current = false);\n  }, []);\n\n  return isMounted;\n};\n\ninterface Props {\n  numberOfLines: number;\n  children: ReactNode;\n  renderTruncatedFooter?: (onclick: () => void) => ReactNode;\n  renderRevealedFooter?: (onclick: () => void) => ReactNode;\n  onReady?: () => {};\n}\n\nconst ReadMore = ({\n  numberOfLines,\n  children,\n  renderTruncatedFooter,\n  renderRevealedFooter,\n  onReady\n}: Props) => {\n  const [measured, setMeasured] = useState<boolean>(false);\n  const [showAllText, setShowAllText] = useState<boolean>(false);\n  const [shouldShowReadMore, setShouldShowReadMore] = useState<boolean>(false);\n\n  const textRef = useRef<Text>(null);\n\n  const _handlePressReadMore = () => {\n    setShowAllText(true);\n  };\n\n  const _handlePressReadLess = () => {\n    setShowAllText(false);\n  };\n\n  const isMounted = useIsMounted();\n\n  useLayoutEffect(() => {\n    const measure = async () => {\n      await nextFrameAsync();\n\n      if (!isMounted.current) {\n        return;\n      }\n\n      // Get the height of the text with no restriction on number of lines\n      const fullHeight = await measureHeightAsync(textRef);\n\n      setMeasured(true);\n      await nextFrameAsync();\n\n      if (!isMounted.current) {\n        return;\n      }\n\n      const limitedHeight = await measureHeightAsync(textRef);\n\n      if (fullHeight > limitedHeight) {\n        setShouldShowReadMore(true);\n      } else {\n        onReady && onReady();\n      }\n    };\n\n    measure();\n  }, [children]);\n\n  useEffect(() => {\n    onReady && onReady();\n  }, [shouldShowReadMore]);\n\n  const maybeRenderReadMore = () => {\n    if (shouldShowReadMore && !showAllText) {\n      if (renderTruncatedFooter) {\n        return renderTruncatedFooter(_handlePressReadMore);\n      }\n\n      return <Text onPress={_handlePressReadMore}>Read more</Text>;\n    } else if (shouldShowReadMore && showAllText) {\n      if (renderRevealedFooter) {\n        return renderRevealedFooter(_handlePressReadLess);\n      }\n\n      return <Text onPress={_handlePressReadLess}>Hide</Text>;\n    }\n  };\n\n  return (\n    <View>\n      <View style={{ opacity: 0, position: \"absolute\" }}>\n        <Text numberOfLines={measured ? numberOfLines : 0} ref={textRef}>\n          {children}\n        </Text>\n      </View>\n\n      <Text numberOfLines={showAllText ? 0 : numberOfLines}>{children}</Text>\n\n      {maybeRenderReadMore()}\n    </View>\n  );\n};\n\nexport default ReadMore;\n"]},"metadata":{},"sourceType":"module"}