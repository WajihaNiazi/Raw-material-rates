{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\contactList\\\\screens\\\\createContacts.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar db = SQLite.openDatabase('contacts.db');\nimport Colors from \"../utils/colors\";\nexport default function CreateContact() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var addContact = function addContact(name, phone, email) {\n    b;\n  };\n\n  return React.createElement(View, {\n    style: styles.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Name\",\n    style: styles.input,\n    value: name,\n    onChangeText: function onChangeText() {\n      return setName(name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    style: styles.input,\n    value: email,\n    onChangeText: function onChangeText() {\n      return setEmail(email);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Phone\",\n    keyboardType: \"numeric\",\n    style: styles.input,\n    value: phone,\n    onChangeText: function onChangeText() {\n      return setPhone(phone);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: [styles.button, {\n      backgroundColor: Colors.primary\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTxt,\n    onPress: function onPress() {\n      return addContact(name, phone, email);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }\n  }, \"Save\")), React.createElement(TouchableOpacity, {\n    style: [styles.button, {\n      backgroundColor: 'red'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }\n  }, \"Cancel\")));\n}\nvar styles = StyleSheet.create({\n  formContainer: {\n    borderRadius: 30,\n    marginTop: 60,\n    paddingVertical: 20,\n    paddingHorizontal: 40,\n    backgroundColor: Colors.white\n  },\n  input: {\n    paddingBottom: 10,\n    marginBottom: 10,\n    borderBottomColor: Colors.secondary,\n    borderBottomWidth: 1\n  },\n  button: {\n    padding: 20,\n    marginTop: 20,\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonTxt: {\n    color: Colors.white\n  }\n});","map":{"version":3,"sources":["C:/Users/lenovo/contactList/screens/createContacts.js"],"names":["React","useState","useEffect","db","SQLite","openDatabase","Colors","CreateContact","name","setName","phone","setPhone","email","setEmail","addContact","b","styles","formContainer","input","button","backgroundColor","primary","buttonTxt","StyleSheet","create","borderRadius","marginTop","paddingVertical","paddingHorizontal","white","paddingBottom","marginBottom","borderBottomColor","secondary","borderBottomWidth","padding","justifyContent","alignItems","color"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    StyleSheet\r\n} from 'react-native';\r\nconst db = SQLite.openDatabase('contacts.db');\r\n\r\nimport Colors from '../utils/colors';\r\n \r\nexport default function CreateContact(){\r\n    const [name,setName] = useState(null);\r\n    const [phone,setPhone] = useState(null);\r\n    const [email,setEmail] = useState(null);\r\n    const addContact = (name,phone,email)=>{\r\n        b\r\n    }\r\n    return (\r\n        <View  style={styles.formContainer}>\r\n           <TextInput placeholder=\"Name\" style={styles.input} value={name} onChangeText={()=>setName(name)} />\r\n           <TextInput placeholder=\"Email\" keyboardType=\"email-address\" style={styles.input}  value={email} onChangeText={()=>setEmail(email)} />\r\n           <TextInput placeholder=\"Phone\" keyboardType=\"numeric\" style={styles.input} value={phone} onChangeText={()=>setPhone(phone)} />\r\n           <TouchableOpacity style={[styles.button,{backgroundColor:Colors.primary}]}>\r\n               <Text style={styles.buttonTxt} onPress={()=>addContact(name,phone,email)}>Save</Text>\r\n           </TouchableOpacity>\r\n           <TouchableOpacity style={[styles.button,{backgroundColor:'red'}]}>\r\n               <Text style={styles.buttonTxt}>Cancel</Text>\r\n           </TouchableOpacity>\r\n        </View>\r\n    )\r\n\r\n}\r\nconst styles =StyleSheet.create({\r\n    formContainer:{\r\n        borderRadius:30,\r\n        marginTop:60,\r\n        paddingVertical:20,\r\n        paddingHorizontal:40,\r\n        backgroundColor:Colors.white\r\n    },\r\n    input:{\r\n        paddingBottom:10,\r\n        marginBottom:10,\r\n        borderBottomColor:Colors.secondary,\r\n        borderBottomWidth:1\r\n    },\r\n    button:{\r\n        padding:20,\r\n        marginTop:20,\r\n        borderRadius:5,\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    },\r\n    buttonTxt:{\r\n        color:Colors.white,\r\n    }\r\n   \r\n})"]},"metadata":{},"sourceType":"module"}